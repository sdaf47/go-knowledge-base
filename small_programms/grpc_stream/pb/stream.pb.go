// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/stream.proto

package stream

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Timestamp struct {
	Seconds              int64    `protobuf:"varint,1,opt,name=Seconds,proto3" json:"Seconds,omitempty"`
	Nanos                int32    `protobuf:"varint,2,opt,name=Nanos,proto3" json:"Nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d0afca130117792c, []int{0}
}
func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (dst *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(dst, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type Logon struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Logon) Reset()         { *m = Logon{} }
func (m *Logon) String() string { return proto.CompactTextString(m) }
func (*Logon) ProtoMessage()    {}
func (*Logon) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d0afca130117792c, []int{1}
}
func (m *Logon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Logon.Unmarshal(m, b)
}
func (m *Logon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Logon.Marshal(b, m, deterministic)
}
func (dst *Logon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Logon.Merge(dst, src)
}
func (m *Logon) XXX_Size() int {
	return xxx_messageInfo_Logon.Size(m)
}
func (m *Logon) XXX_DiscardUnknown() {
	xxx_messageInfo_Logon.DiscardUnknown(m)
}

var xxx_messageInfo_Logon proto.InternalMessageInfo

func (m *Logon) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Logon) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LogonStatus struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogonStatus) Reset()         { *m = LogonStatus{} }
func (m *LogonStatus) String() string { return proto.CompactTextString(m) }
func (*LogonStatus) ProtoMessage()    {}
func (*LogonStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d0afca130117792c, []int{2}
}
func (m *LogonStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogonStatus.Unmarshal(m, b)
}
func (m *LogonStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogonStatus.Marshal(b, m, deterministic)
}
func (dst *LogonStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogonStatus.Merge(dst, src)
}
func (m *LogonStatus) XXX_Size() int {
	return xxx_messageInfo_LogonStatus.Size(m)
}
func (m *LogonStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_LogonStatus.DiscardUnknown(m)
}

var xxx_messageInfo_LogonStatus proto.InternalMessageInfo

func (m *LogonStatus) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *LogonStatus) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LogonStatus) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Message struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Username             string               `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Message              string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d0afca130117792c, []int{3}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Message) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Request struct {
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d0afca130117792c, []int{4}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "Timestamp")
	proto.RegisterType((*Logon)(nil), "Logon")
	proto.RegisterType((*LogonStatus)(nil), "LogonStatus")
	proto.RegisterType((*Message)(nil), "Message")
	proto.RegisterType((*Request)(nil), "Request")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessageBrokerClient is the client API for MessageBroker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageBrokerClient interface {
	Subscribe(ctx context.Context, in *Logon, opts ...grpc.CallOption) (*LogonStatus, error)
	OpenStream(ctx context.Context, opts ...grpc.CallOption) (MessageBroker_OpenStreamClient, error)
}

type messageBrokerClient struct {
	cc *grpc.ClientConn
}

func NewMessageBrokerClient(cc *grpc.ClientConn) MessageBrokerClient {
	return &messageBrokerClient{cc}
}

func (c *messageBrokerClient) Subscribe(ctx context.Context, in *Logon, opts ...grpc.CallOption) (*LogonStatus, error) {
	out := new(LogonStatus)
	err := c.cc.Invoke(ctx, "/MessageBroker/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageBrokerClient) OpenStream(ctx context.Context, opts ...grpc.CallOption) (MessageBroker_OpenStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessageBroker_serviceDesc.Streams[0], "/MessageBroker/OpenStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &messageBrokerOpenStreamClient{stream}
	return x, nil
}

type MessageBroker_OpenStreamClient interface {
	Send(*Request) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type messageBrokerOpenStreamClient struct {
	grpc.ClientStream
}

func (x *messageBrokerOpenStreamClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messageBrokerOpenStreamClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessageBrokerServer is the server API for MessageBroker service.
type MessageBrokerServer interface {
	Subscribe(context.Context, *Logon) (*LogonStatus, error)
	OpenStream(MessageBroker_OpenStreamServer) error
}

func RegisterMessageBrokerServer(s *grpc.Server, srv MessageBrokerServer) {
	s.RegisterService(&_MessageBroker_serviceDesc, srv)
}

func _MessageBroker_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Logon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageBrokerServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MessageBroker/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageBrokerServer).Subscribe(ctx, req.(*Logon))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageBroker_OpenStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessageBrokerServer).OpenStream(&messageBrokerOpenStreamServer{stream})
}

type MessageBroker_OpenStreamServer interface {
	Send(*Message) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type messageBrokerOpenStreamServer struct {
	grpc.ServerStream
}

func (x *messageBrokerOpenStreamServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messageBrokerOpenStreamServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MessageBroker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MessageBroker",
	HandlerType: (*MessageBrokerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Subscribe",
			Handler:    _MessageBroker_Subscribe_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OpenStream",
			Handler:       _MessageBroker_OpenStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pb/stream.proto",
}

func init() { proto.RegisterFile("pb/stream.proto", fileDescriptor_stream_d0afca130117792c) }

var fileDescriptor_stream_d0afca130117792c = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcf, 0x4f, 0xbb, 0x40,
	0x10, 0xc5, 0x43, 0x9b, 0x16, 0x98, 0x7e, 0xbf, 0x31, 0xd9, 0x78, 0x20, 0x5c, 0xac, 0xe8, 0xa1,
	0xa7, 0xc5, 0xd4, 0x8b, 0x89, 0x07, 0x13, 0xcf, 0xfe, 0x48, 0x16, 0x0f, 0x5e, 0x17, 0x3a, 0x92,
	0xa6, 0xc2, 0xe2, 0xce, 0x6e, 0x8c, 0xff, 0xbd, 0x61, 0x17, 0xf0, 0x47, 0xe2, 0xf1, 0x33, 0xcc,
	0xbc, 0xc7, 0x7b, 0x0b, 0x47, 0x5d, 0x99, 0x93, 0xd1, 0x28, 0x1b, 0xde, 0x69, 0x65, 0x54, 0x7a,
	0x52, 0x2b, 0x55, 0xbf, 0x62, 0xee, 0xa8, 0xb4, 0x2f, 0xb9, 0xd9, 0x37, 0x48, 0x46, 0x36, 0x9d,
	0x5f, 0xc8, 0xae, 0x21, 0x7e, 0x1a, 0x47, 0x2c, 0x81, 0xb0, 0xc0, 0x4a, 0xb5, 0x3b, 0x4a, 0x82,
	0x75, 0xb0, 0x99, 0x8b, 0x11, 0xd9, 0x31, 0x2c, 0x1e, 0x64, 0xab, 0x28, 0x99, 0xad, 0x83, 0xcd,
	0x42, 0x78, 0xc8, 0x6e, 0x60, 0x71, 0xa7, 0x6a, 0xd5, 0xb2, 0x14, 0x22, 0x4b, 0xa8, 0x5b, 0xd9,
	0xa0, 0xbb, 0x8c, 0xc5, 0xc4, 0xfd, 0xb7, 0x4e, 0x12, 0xbd, 0x2b, 0xbd, 0x73, 0xd7, 0xb1, 0x98,
	0x38, 0x2b, 0x60, 0xe5, 0x04, 0x0a, 0x23, 0x8d, 0xa5, 0xde, 0x9f, 0x6c, 0x55, 0x21, 0x79, 0xff,
	0x48, 0x8c, 0xd8, 0xfb, 0x1b, 0x75, 0xc0, 0x76, 0x50, 0xf0, 0xd0, 0x4f, 0x51, 0x6b, 0xa5, 0x93,
	0xb9, 0x9f, 0x3a, 0xc8, 0x3e, 0x20, 0xbc, 0x47, 0x22, 0x59, 0x23, 0xbb, 0x82, 0x78, 0x0a, 0xec,
	0x24, 0x57, 0xdb, 0x94, 0xfb, 0x4a, 0xf8, 0x58, 0x09, 0x9f, 0xf2, 0x8b, 0xaf, 0xe5, 0x1f, 0x89,
	0x66, 0xbf, 0x12, 0x25, 0x10, 0x36, 0xde, 0x60, 0x30, 0x1e, 0x31, 0x3b, 0x83, 0x50, 0xe0, 0x9b,
	0x45, 0x32, 0x7f, 0x2f, 0x6d, 0x9f, 0xe1, 0xff, 0xf0, 0x7f, 0xb7, 0x5a, 0x1d, 0x50, 0xb3, 0x53,
	0x88, 0x0b, 0x5b, 0x52, 0xa5, 0xf7, 0x25, 0xb2, 0x25, 0x77, 0x8d, 0xa4, 0xff, 0xf8, 0xf7, 0x66,
	0xce, 0x01, 0x1e, 0x3b, 0x6c, 0x0b, 0xf7, 0xb6, 0x2c, 0xe2, 0x83, 0x4b, 0x1a, 0xf1, 0x41, 0x6a,
	0x13, 0x5c, 0x04, 0xe5, 0xd2, 0x65, 0xba, 0xfc, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x5a, 0x3d,
	0x62, 0x07, 0x02, 0x00, 0x00,
}
